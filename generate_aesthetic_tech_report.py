#!/usr/bin/env python3
"""
Generate Final User-Facing Report for Aesthetic Tech Creator
Complete markdown report with niche-specific content templates
"""

import sys
from pathlib import Path
from datetime import datetime

# Add project path
sys.path.append(str(Path(__file__).parent / "vootcamp_ph_scraper"))

from vootcamp_ph_scraper.persona_recommendation_engine import PersonaRecommendationEngine

def generate_aesthetic_tech_report():
    """Generate complete user-facing report for aesthetic tech creator scenario"""
    
    print("⌨️ Generating Final Aesthetic Tech Creator Report")
    print("=" * 70)
    
    # Test user profile - mechanical keyboard enthusiast
    user_data = {
        "mbti": "INTP",
        "interests": ["mechanical keyboard", "desk setup", "aesthetic tech", "productivity"],
        "channel_category": "Tech",
        "budget_level": "high"
    }
    
    # Initialize engine and generate recommendations
    engine = PersonaRecommendationEngine()
    result = engine.generate_custom_recommendation(user_data)
    
    # Generate report
    report = f"""# 🎯 Personalized Content Creator Report
Generated on {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}

## 📊 Quick Stats
**High-Performance Products:** {len([p for p in result["products"] if p.trending_score >= 80])} items scoring 80+
**Niche-Specific Ideas:** {len([i for i in result["content_ideas"] if "mechanical keyboard" in i.title.lower()])} keyboard-focused content ideas
**Total Recommendations:** {len(result["products"])} products, {len(result["content_ideas"])} content ideas

## 🛍️ Product Recommendations

{generate_product_section(result["products"])}

## 📝 Your Content Blueprint

{generate_content_section(result["content_ideas"])}

## 🎨 Style Guide
Based on your INTP personality and interests in tech aesthetics:
- Focus on detailed technical analysis and logical explanations
- Include data-driven comparisons and benchmarks
- Maintain a clean, minimalist visual style
- Emphasize functionality while showcasing aesthetics

## 📈 Growth Strategy
1. Build authority in the mechanical keyboard niche
2. Cross-pollinate with desk setup and productivity content
3. Leverage the growing aesthetic tech movement
4. Create series content for consistent viewer retention

## 🎬 Next Steps
1. Choose your first product to review
2. Plan your content calendar using the provided ideas
3. Set up your recording environment
4. Start with a product review or desk setup tour

---
*This report was generated by Vootcamp PH's True Personalization Engine*
"""
    
    # Save report
    with open("final_report_aesthetic_tech_tuber.md", "w", encoding="utf-8") as f:
        f.write(report)
    
    print("\n✅ Report generated successfully!")
    print("📄 Saved as: final_report_aesthetic_tech_tuber.md")

def generate_product_section(products) -> str:
    """Generate the product recommendations section"""
    
    sections = []
    for product in products:
        section = f"""### {product.product_name}
**Category:** {product.category}
**Price Range:** ₱{product.price_range}
**Why We Recommend It:** {product.why_recommended}
**Where to Buy:** {", ".join(product.where_to_buy)}
**Content Angle:** {product.content_angle}
"""
        sections.append(section)
    
    return "\n".join(sections)

def generate_content_section(ideas) -> str:
    """Generate the content ideas section"""
    
    sections = []
    for i, idea in enumerate(ideas, 1):
        section = f"""### Content Idea {i}: {idea.title}
**Type:** {idea.content_type}
**Platform:** {idea.platform}
**Hook:** {idea.hook}

**Key Points:**
{generate_key_points(idea.key_points)}

**Call to Action:** {idea.call_to_action}
**Trend Connection:** {idea.trend_connection}
"""
        sections.append(section)
    
    return "\n".join(sections)

def generate_key_points(points) -> str:
    """Generate formatted key points"""
    return "\n".join(f"- {point}" for point in points)

if __name__ == "__main__":
    generate_aesthetic_tech_report() 