AI 리포트 생성기 PRD (Product Requirements Document)
=====================================================

## 제품 개요
목표: Supabase에 저장된 분석 완료된 데이터와 사용자 프로필을 입력받아, OpenAI GPT-4o API를 통해 개인화된 콘텐츠 전략 리포트 텍스트를 자동으로 생성하는 Python 모듈 구현

## 핵심 기능 요구사항

### 1. 데이터 입력 및 준비 시스템
**구현 위치**: `ai/report_generator.py`
**핵심 클래스**: `AIReportGenerator`

#### 기능 상세:
- Supabase 클라이언트 연결 및 데이터 추출
- 사용자 프로필 데이터 가져오기 (users 테이블)
  - 페르소나, MBTI, 관심 키워드 등
- 분석된 이벤트 데이터 추출 (analyzed_events 테이블)
  - 기회 점수가 높은 상위 1-2개 최신 이벤트
- 분석된 상품 데이터 추출 (lazada_products, tiktok_shop_products 테이블)
  - 사용자 페르소나와 관련된 상위 1-2개 트렌드 상품
- AI 친화적 데이터 정제 및 포맷팅 (JSON/텍스트)

#### 기술 요구사항:
- Python 3.9+
- supabase-py 라이브러리
- 데이터 검증 및 에러 핸들링
- 로깅 시스템 구현

### 2. 마스터 프롬프트 시스템 및 OpenAI API 통합
**구현 위치**: `AIReportGenerator` 클래스 내 `generate_report` 메소드

#### 기능 상세:
- 마스터 프롬프트 템플릿 정의
  - AI 역할 정의
  - 출력 형식 가이드라인
  - 콘텐츠 전략 리포트 구조 명세
- 동적 데이터 삽입 시스템
  - 사용자 프로필 정보 주입
  - 최신 트렌드 데이터 통합
- OpenAI GPT-4o API 호출
  - 인증 및 요청 관리
  - 응답 검증 및 파싱
  - 에러 처리 및 재시도 로직

#### 기술 요구사항:
- openai Python 라이브러리 최신 버전
- 환경 변수를 통한 API 키 관리
- 프롬프트 템플릿 외부화 (설정 파일)
- 토큰 사용량 모니터링

### 3. 결과 저장 및 후처리 시스템
**구현 위치**: `generate_report` 메소드 마지막 단계

#### 기능 상세:
- 생성된 리포트 Supabase 저장
  - content_reports 테이블 활용
  - user_id, report_title, report_body 필드
- 포맷팅 옵션
  - Markdown 형식 변환
  - HTML 형식 변환 (웹 대시보드용)
- 알림 시스템 (선택사항)
  - 슬랙 webhook 통합
  - 이메일 알림 기능
  - 관리자 대시보드 업데이트

#### 기술 요구사항:
- 마크다운 파서 (markdown 라이브러리)
- 알림 시스템 (slack-sdk, smtplib)
- 타임스탬프 및 메타데이터 관리

## 비기능 요구사항

### 성능 요구사항
- 단일 리포트 생성 시간: 30초 이내
- 동시 처리 가능 요청: 5개
- API 호출 실패 시 최대 3회 재시도

### 보안 요구사항
- OpenAI API 키 환경 변수 관리
- Supabase 연결 보안 설정
- 사용자 데이터 암호화 저장

### 확장성 요구사항
- 프롬프트 템플릿 외부 설정 파일화
- 여러 AI 모델 지원 가능한 아키텍처
- 배치 처리 기능 대응

## 데이터베이스 스키마 요구사항

### 새로 생성할 테이블
```sql
-- AI 생성 리포트 저장 테이블
CREATE TABLE content_reports (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID NOT NULL REFERENCES users(id),
    report_title TEXT NOT NULL,
    report_body TEXT NOT NULL,
    report_format TEXT DEFAULT 'markdown',
    generation_metadata JSONB,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 프롬프트 템플릿 관리 테이블
CREATE TABLE prompt_templates (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    template_name TEXT UNIQUE NOT NULL,
    template_content TEXT NOT NULL,
    template_version TEXT DEFAULT '1.0',
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 기존 테이블 활용
- users: 사용자 프로필 및 페르소나 정보
- analyzed_events: 분석된 이벤트 데이터
- lazada_products: 라자다 상품 데이터
- tiktok_shop_products: 틱톡샵 상품 데이터

## 개발 마일스톤

### Phase 1: 기본 데이터 연동 (1-2주)
- AIReportGenerator 클래스 기본 구조
- Supabase 연결 및 데이터 추출 로직
- 데이터 정제 및 포맷팅 기능

### Phase 2: AI 통합 및 프롬프트 시스템 (2-3주)
- 마스터 프롬프트 템플릿 설계
- OpenAI API 통합
- 동적 데이터 삽입 시스템

### Phase 3: 저장 및 후처리 (1주)
- 결과 저장 로직
- 포맷팅 옵션 구현
- 알림 시스템 통합

### Phase 4: 테스팅 및 최적화 (1주)
- 단위 테스트 및 통합 테스트
- 성능 최적화
- 에러 핸들링 강화

## 성공 지표
- 정확한 사용자 데이터 기반 리포트 생성: 95% 이상
- API 호출 성공률: 98% 이상
- 리포트 생성 완료 시간: 평균 20초 이내
- 사용자 만족도: 리포트 품질 4.5/5.0 이상

## 의존성
- 기존 Supabase 데이터베이스 및 테이블 구조
- OpenAI API 접근 권한
- Python 개발 환경 및 필요 라이브러리 